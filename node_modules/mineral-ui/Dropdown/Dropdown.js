'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _utils = require('../utils');

var _Popover = require('../Popover');

var _Popover2 = _interopRequireDefault(_Popover);

var _DropdownContent = require('./DropdownContent');

var _DropdownContent2 = _interopRequireDefault(_DropdownContent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 CA
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

/**
 * Dropdown presents a list of actions after a user interacts with a trigger.
 */
var Dropdown = function (_Component) {
  _inherits(Dropdown, _Component);

  function Dropdown() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Dropdown);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      highlightedIndex: null,
      isOpen: Boolean(_this.props.defaultIsOpen)
    }, _this._isMounted = false, _this.id = 'dropdown-' + (0, _utils.generateId)(), _this.getTriggerProps = function (props) {
      var contentId = _this.id + '-dropdownContent';
      var isOpen = props.isOpen;


      return _extends({}, props, {
        'aria-activedescendant': isOpen ? _this.selectedItemId || contentId + '-menu' : undefined,
        'aria-haspopup': true,
        contentId: contentId,
        onKeyDown: _this.onTriggerKeyDown
      });
    }, _this.getItems = function () {
      return _this.props.data.reduce(function (acc, group) {
        return group.items && group.items.length ? acc.concat(group.items.filter(function (item) {
          return !item.divider;
        })) : acc;
      }, []);
    }, _this.onTriggerKeyDown = function (event) {
      if (event.key === 'ArrowDown') {
        event.preventDefault();
        _this.setState(function (prevState) {
          return {
            highlightedIndex: prevState.highlightedIndex === null || prevState.highlightedIndex === _this.getItems().length - 1 ? 0 : prevState.highlightedIndex + 1
          };
        });
        _this.open(event);
      } else if (event.key === 'ArrowUp') {
        event.preventDefault();
        _this.setState(function (prevState) {
          return {
            highlightedIndex: prevState.highlightedIndex === null || prevState.highlightedIndex === 0 ? _this.getItems().length - 1 : prevState.highlightedIndex - 1
          };
        });
        _this.open(event);
      } else if (event.key === 'Enter' || event.key === ' ') {
        var _ref2 = _this.isControlled() ? _this.props : _this.state,
            _isOpen = _ref2.isOpen;

        if (!_isOpen || !_this._isMounted || !_this.selectedItemId) {
          return;
        }

        event.preventDefault(); // Prevent from reopening due to event on trigger

        var selectedItemNode = global.document.getElementById(_this.selectedItemId);
        selectedItemNode && selectedItemNode.click();
      }
    }, _this.open = function (event) {
      if (_this.isControlled()) {
        _this.openActions(event);
      } else {
        _this.setState(function () {
          return { isOpen: true };
        }, function () {
          _this.openActions(event);
        });
      }
    }, _this.openActions = function (event) {
      _this.props.onOpen && _this.props.onOpen(event);
    }, _this.close = function (event) {
      _this.setState({ highlightedIndex: null });

      if (_this.isControlled()) {
        _this.closeActions(event);
      } else {
        _this.setState(function () {
          return { isOpen: false };
        }, function () {
          _this.closeActions(event);
        });
      }
    }, _this.closeActions = function (event) {
      _this.props.onClose && _this.props.onClose(event);
    }, _this.isControlled = function () {
      return _this.props.isOpen !== undefined;
    }, _this.getItemProps = function (props, scope) {
      var index = scope.index,
          item = scope.item;


      return _extends({}, props, {
        'aria-disabled': props.disabled,
        id: _this.id + '-menuItem-' + index,
        isHighlighted: _this.state.highlightedIndex === index,
        onClick: _this.itemOnClick.bind(null, item),
        role: 'menuitem',
        tabIndex: null // Unset tabIndex because we use arrow keys to navigate instead
      });
    }, _this.itemOnClick = function (item, event) {
      var onClick = item.onClick;


      onClick && onClick(event);
      _this.close(event);
      _this.focusTrigger();
    }, _this.focusTrigger = function () {
      var node = (0, _reactDom.findDOMNode)(_this.dropdownTrigger); // eslint-disable-line react/no-find-dom-node
      if (node && node.firstChild && node.firstChild instanceof HTMLElement) {
        node.firstChild.focus();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Dropdown, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._isMounted = true;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._isMounted = false;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          data = _props.data,
          modifiers = _props.modifiers,
          placement = _props.placement,
          wide = _props.wide,
          restProps = _objectWithoutProperties(_props, ['children', 'data', 'modifiers', 'placement', 'wide']);

      var _ref3 = this.isControlled() ? this.props : this.state,
          isOpen = _ref3.isOpen;

      if (isOpen) {
        this.selectedItemId = this.state.highlightedIndex === null ? undefined : this.id + '-menuItem-' + this.state.highlightedIndex;
      }

      var dropdownContentProps = {
        data: data,
        id: this.id + '-dropdownContent',
        getItemProps: this.getItemProps,
        modifiers: modifiers,
        placement: placement,
        wide: wide
      };

      var rootProps = _extends({
        id: this.id
      }, restProps, {
        content: _react2.default.createElement(_DropdownContent2.default, dropdownContentProps),
        getTriggerProps: this.getTriggerProps,
        isOpen: isOpen,
        onClose: this.close,
        onOpen: this.open,
        triggerRef: function triggerRef(node) {
          _this2.dropdownTrigger = node;
        },
        wrapContent: false
      });

      return _react2.default.createElement(
        _Popover2.default,
        rootProps,
        children
      );
    }
  }]);

  return Dropdown;
}(_react.Component);

Dropdown.propTypes = {
  /** Trigger for the Dropdown */
  children: typeof React$Node === 'function' ? require('prop-types').instanceOf(React$Node).isRequired : require('prop-types').any.isRequired,

  /** Open the Dropdown immediately upon initialization */
  defaultIsOpen: require('prop-types').bool,

  /** Disable the Dropdown */
  disabled: require('prop-types').bool,

  /** Data from which the [Menu](../menu#data) will be constructed (see [example](#data)) */
  data: require('prop-types').arrayOf(require('prop-types').shape({
    items: require('prop-types').arrayOf(require('prop-types').shape({
      iconEnd: typeof React$Element === 'function' ? require('prop-types').instanceOf(React$Element) : require('prop-types').any,
      iconStart: typeof React$Element === 'function' ? require('prop-types').instanceOf(React$Element) : require('prop-types').any,
      disabled: require('prop-types').bool,
      divider: require('prop-types').bool,
      onClick: require('prop-types').func,
      render: require('prop-types').func,
      secondaryText: typeof React$Node === 'function' ? require('prop-types').instanceOf(React$Node) : require('prop-types').any,
      text: typeof React$Node === 'function' ? require('prop-types').instanceOf(React$Node) : require('prop-types').any,
      variant: require('prop-types').oneOf(['regular', 'danger', 'success', 'warning'])
    })).isRequired,
    title: typeof React$Node === 'function' ? require('prop-types').instanceOf(React$Node) : require('prop-types').any
  })).isRequired,

  /** For use with controlled components, in which the app manages Dropdown state */
  isOpen: require('prop-types').bool,

  /** Plugins that are used to alter behavior. See [PopperJS docs](https://popper.js.org/popper-documentation.html#modifiers) for options. */
  modifiers: require('prop-types').object,

  /** Called when Dropdown is closed */
  onClose: require('prop-types').func,

  /** Called when Dropdown is opened */
  onOpen: require('prop-types').func,

  /** Placement of the Dropdown menu */
  placement: require('prop-types').oneOf(['bottom-end', 'bottom-start', 'left-end', 'left-start', 'right-end', 'right-start', 'top-end', 'top-start']),

  /** Use a Portal to render the Dropdown menu to the body rather than as a sibling to the trigger */
  usePortal: require('prop-types').bool,

  /** Display a wider Dropdown menu */
  wide: require('prop-types').bool
};
Dropdown.defaultProps = {
  placement: 'bottom-start'
};
exports.default = Dropdown;