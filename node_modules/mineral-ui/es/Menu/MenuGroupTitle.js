var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * Copyright 2017 CA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import React from 'react';
import { createStyledComponent, getNormalizedValue, pxToEm } from '../styles';
import { componentTheme as menuItemComponentTheme } from '../Menu/MenuItem';

export var componentTheme = function componentTheme(baseTheme) {
  return _extends({
    MenuGroupTitle_fontSize: pxToEm(12),
    MenuGroupTitle_fontWeight: baseTheme.fontWeight_bold,
    MenuGroupTitle_paddingTop: baseTheme.space_stack_md,
    MenuGroupTitle_paddingBottom: baseTheme.space_stack_sm

  }, baseTheme);
};

var Root = createStyledComponent('h3', function (props) {
  var theme = _extends({}, componentTheme(props.theme), menuItemComponentTheme(props.theme));

  var paddingBottom = getNormalizedValue(theme.MenuGroupTitle_paddingBottom, theme.MenuGroupTitle_fontSize);

  var paddingTop = getNormalizedValue(theme.MenuGroupTitle_paddingTop, theme.MenuGroupTitle_fontSize);

  // We need to use MenuItem's padding, to match
  var paddingHorizontal = getNormalizedValue(theme.MenuItem_paddingHorizontal, theme.MenuGroupTitle_fontSize);

  return {
    fontSize: theme.MenuGroupTitle_fontSize,
    fontWeight: theme.MenuGroupTitle_fontWeight,
    margin: 0,
    padding: paddingTop + ' ' + paddingHorizontal + ' ' + paddingBottom
  };
}, {
  displayName: 'MenuGroupTitle'
});

/**
 * Menu group title component
 */
export default function MenuGroupTitle(props) {
  return React.createElement(Root, props);
}