var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Copyright 2017 CA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import React from 'react';
import { createStyledComponent, pxToEm } from '../styles';
import IconDangerSimple from '../Icon/IconDangerSimple';
import IconSuccessSimple from '../Icon/IconSuccessSimple';
import IconWarningSimple from '../Icon/IconWarningSimple';
import CardRow from './CardRow';

export var componentTheme = function componentTheme(baseTheme) {
  return _extends({
    CardStatus_fontSize: baseTheme.fontSize_ui,
    CardStatus_fontWeight: baseTheme.fontWeight_regular,

    CardStatusIcon_margin: baseTheme.space_inline_sm,
    CardStatusIcon_size: pxToEm(12)

  }, baseTheme);
};

var Root = createStyledComponent(CardRow, function (_ref) {
  var baseTheme = _ref.theme,
      variant = _ref.variant;

  var theme = componentTheme(baseTheme);
  var rtl = theme.direction === 'rtl';

  return {
    alignItems: 'center',
    color: theme['color_text_' + variant],
    display: 'flex',
    fontSize: theme.CardStatus_fontSize,
    fontWeight: theme.CardStatus_fontWeight,

    '& > [role="img"]': {
      fill: 'currentcolor',
      height: theme.CardStatusIcon_size,
      marginRight: rtl ? null : theme.CardStatusIcon_margin,
      marginLeft: rtl ? theme.CardStatusIcon_margin : null,
      width: theme.CardStatusIcon_size
    }
  };
}, {
  displayName: 'CardStatus'
});

var statusIcons = {
  danger: _jsx(IconDangerSimple, {}),
  success: _jsx(IconSuccessSimple, {}),
  warning: _jsx(IconWarningSimple, {})
};

/**
 * CardStatus provides a standard way of displaying a [Card's](../card) current status.
 */
export default function CardStatus(_ref2) {
  var children = _ref2.children,
      variant = _ref2.variant,
      restProps = _objectWithoutProperties(_ref2, ['children', 'variant']);

  var rootProps = _extends({
    variant: variant
  }, restProps);
  var icon = statusIcons[variant];

  return React.createElement(
    Root,
    rootProps,
    icon,
    children
  );
}