var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Copyright 2017 CA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import React from 'react';
import { createThemedComponent, mapComponentThemes } from '../themes';
import ChoiceGroup, { componentTheme as choiceGroupComponentTheme } from '../Choice/ChoiceGroup';
import Radio from './Radio';

export var componentTheme = function componentTheme(baseTheme) {
  return _extends({}, mapComponentThemes({
    name: 'ChoiceGroup',
    theme: choiceGroupComponentTheme(baseTheme)
  }, {
    name: 'RadioGroup',
    theme: {}
  }, baseTheme));
};

var Root = createThemedComponent(ChoiceGroup, function (_ref) {
  var baseTheme = _ref.theme;

  return _extends({}, mapComponentThemes({
    name: 'RadioGroup',
    theme: componentTheme(baseTheme)
  }, {
    name: 'ChoiceGroup',
    theme: {}
  }, baseTheme));
});

/**
 * RadioGroup allows authors to construct a group of [Radios](../radio)
 * and provides a simpler API than working with Radio directly.
 *
 * RadioGroup allows users to select a single option from a list.
 */
export default function RadioGroup(_ref2) {
  var otherRootProps = _ref2.rootProps,
      restProps = _objectWithoutProperties(_ref2, ['rootProps']);

  var rootProps = _extends({
    rootProps: _extends({
      role: 'radiogroup'
    }, otherRootProps),
    input: Radio,
    type: 'radio'
  }, restProps);

  return React.createElement(Root, rootProps);
}