'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentTheme = undefined;

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * Copyright 2017 CA
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   */

exports.default = MenuItem;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _glamorous = require('glamorous');

var _styles = require('../styles');

var _IconDanger = require('../Icon/IconDanger');

var _IconDanger2 = _interopRequireDefault(_IconDanger);

var _IconSuccess = require('../Icon/IconSuccess');

var _IconSuccess2 = _interopRequireDefault(_IconSuccess);

var _IconWarning = require('../Icon/IconWarning');

var _IconWarning2 = _interopRequireDefault(_IconWarning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// Some of these values (all of the margins & paddings and the content fontSize)
// come from Button (large)
var componentTheme = exports.componentTheme = function componentTheme(baseTheme) {
  return _extends({
    MenuItem_backgroundColor_active: baseTheme.color_gray_40,
    MenuItem_backgroundColor_focus: baseTheme.color_gray_20,
    MenuItem_backgroundColor_hover: baseTheme.color_gray_20,
    MenuItem_color_text: baseTheme.color_text,
    MenuItem_fontWeight: baseTheme.fontWeight_regular,
    MenuItem_paddingHorizontal: baseTheme.space_inset_md,
    MenuItem_paddingVertical: baseTheme.space_inset_sm,

    MenuItemContent_fontSize: baseTheme.fontSize_ui,

    MenuItemIcon_fill: baseTheme.color_theme_60,
    MenuItemIcon_margin: baseTheme.space_inset_sm,

    MenuItemSecondaryText_color_text: baseTheme.color_caption,
    MenuItemSecondaryText_fontSize: (0, _styles.pxToEm)(12)

  }, baseTheme);
};

// These styles are based off of Button, with significant changes
var styles = {
  content: function content(props) {
    var theme = componentTheme(props.theme);

    var fontSize = theme.MenuItemContent_fontSize;
    var paddingBottom = (0, _styles.getNormalizedValue)((0, _styles.pxToEm)(4), fontSize);
    var paddingTop = (0, _styles.getNormalizedValue)((0, _styles.pxToEm)(3), fontSize);

    return {
      display: 'flex',
      flex: '1 1 auto',
      flexWrap: 'wrap',
      fontSize: fontSize,
      justifyContent: 'space-between',
      padding: paddingTop + ' 0 ' + paddingBottom,
      whiteSpace: 'normal',
      wordBreak: 'break-all'
    };
  },
  inner: {
    display: 'flex',
    justifyContent: 'space-between'
  },
  menuItem: function menuItem(props) {
    var disabled = props.disabled,
        isHighlighted = props.isHighlighted,
        variant = props.variant;

    var theme = componentTheme(props.theme);

    if (variant !== 'regular') {
      // prettier-ignore
      theme = _extends({}, theme, {
        MenuItem_backgroundColor_active: theme['backgroundColor_' + variant + '_activeMuted'],
        MenuItem_color_text: theme['color_text_' + variant]
      });
    }

    return {
      backgroundColor: isHighlighted && theme.MenuItem_backgroundColor_hover,
      color: disabled ? theme.color_text_disabled : theme.MenuItem_color_text,
      cursor: disabled ? 'default' : 'pointer',
      fontWeight: theme.MenuItem_fontWeight,
      padding: theme.MenuItem_paddingVertical + ' ' + theme.MenuItem_paddingHorizontal,

      '&:focus': {
        backgroundColor: !disabled && theme.MenuItem_backgroundColor_focus,
        outline: 0
      },

      '&:hover': {
        backgroundColor: !disabled && theme.MenuItem_backgroundColor_hover
      },

      '&:active': {
        backgroundColor: !disabled && theme.MenuItem_backgroundColor_active
      },

      '& [role="img"]': {
        boxSizing: 'content-box',
        display: 'block',
        fill: disabled || variant !== 'regular' ? 'currentColor' : theme.MenuItemIcon_fill,
        flex: '0 0 auto',

        '&:first-child': {
          marginLeft: theme.direction === 'rtl' ? theme.MenuItemIcon_margin : null,
          marginRight: theme.direction === 'ltr' ? theme.MenuItemIcon_margin : null
        },

        '&:last-child': {
          marginLeft: theme.direction === 'ltr' ? theme.MenuItemIcon_margin : null,
          marginRight: theme.direction === 'rtl' ? theme.MenuItemIcon_margin : null
        }
      }
    };
  },
  secondaryText: function secondaryText(props) {
    var theme = componentTheme(props.theme);

    return {
      color: theme.MenuItemSecondaryText_color_text,
      fontSize: theme.MenuItemSecondaryText_fontSize,
      // The regular text fontSize is larger than that of the secondary text.
      // This magic number (optically) re-aligns both sets of text vertically.
      paddingTop: (0, _styles.getNormalizedValue)((0, _styles.pxToEm)(3), theme.MenuItemSecondaryText_fontSize),
      wordBreak: 'break-word'
    };
  },
  text: function text(props) {
    var theme = componentTheme(props.theme);

    var margin = (0, _styles.getNormalizedValue)(theme.space_inline_sm, theme.MenuItemContent_fontSize);

    return {
      marginLeft: theme.direction === 'rtl' && margin,
      marginRight: theme.direction === 'ltr' && margin,
      wordBreak: 'break-word'
    };
  }
};

var Root = (0, _styles.createStyledComponent)('div', styles.menuItem, {
  displayName: 'MenuItem'
});

var CustomRoot = (0, _glamorous.withTheme)(function (_ref) {
  var item = _ref.item,
      itemProps = _ref.itemProps,
      render = _ref.render,
      baseTheme = _ref.theme;

  var theme = componentTheme(baseTheme);
  return render(item, itemProps, theme);
});

var Content = (0, _styles.createStyledComponent)('span', styles.content);
var Inner = (0, _styles.createStyledComponent)('span', styles.inner);
var SecondaryText = (0, _styles.createStyledComponent)('span', styles.secondaryText);
var Text = (0, _styles.createStyledComponent)('span', styles.text);

var onKeyDown = function onKeyDown(onClick, event) {
  if (event.key === 'Enter' || event.key === ' ') {
    event.preventDefault();
    onClick && onClick(event);
  }
};

var variantIcons = {
  danger: _jsx(_IconDanger2.default, {
    size: (0, _styles.pxToEm)(24)
  }),
  success: _jsx(_IconSuccess2.default, {
    size: (0, _styles.pxToEm)(24)
  }),
  warning: _jsx(_IconWarning2.default, {
    size: (0, _styles.pxToEm)(24)
  })
};

var defaultRender = function defaultRender(_ref2) {
  var children = _ref2.children,
      disabled = _ref2.disabled,
      iconEnd = _ref2.iconEnd,
      iconStart = _ref2.iconStart,
      onClick = _ref2.onClick,
      secondaryText = _ref2.secondaryText,
      variant = _ref2.variant,
      tabIndex = _ref2.tabIndex,
      restProps = _objectWithoutProperties(_ref2, ['children', 'disabled', 'iconEnd', 'iconStart', 'onClick', 'secondaryText', 'variant', 'tabIndex']);

  var rootProps = _extends({
    disabled: disabled,
    onClick: disabled ? undefined : onClick,
    onKeyDown: onClick ? onKeyDown.bind(null, onClick) : undefined,
    tabIndex: disabled ? '-1' : tabIndex,
    variant: variant
  }, restProps);

  var startIcon = variant !== undefined && variant !== 'regular' && variantIcons[variant];
  if (iconStart) {
    startIcon = (0, _react.cloneElement)(iconStart, { size: (0, _styles.pxToEm)(24), key: 'iconStart' });
  }

  var endIcon = iconEnd && (0, _react.cloneElement)(iconEnd, { size: (0, _styles.pxToEm)(24), key: 'iconEnd' });

  // This structure is based on Button
  return _react2.default.createElement(
    Root,
    rootProps,
    _jsx(Inner, {}, void 0, startIcon, (children || secondaryText) && _jsx(Content, {}, void 0, _jsx(Text, {}, void 0, children), SecondaryText && _jsx(SecondaryText, {}, void 0, secondaryText)), endIcon)
  );
};

var customRender = function customRender(_ref3) {
  var render = _ref3.render,
      item = _ref3.item,
      restProps = _objectWithoutProperties(_ref3, ['render', 'item']);

  var customRootProps = {
    item: item,
    itemProps: _extends({
      onKeyDown: item && item.onClick ? onKeyDown.bind(null, item.onClick) : undefined,
      tabIndex: item && item.disabled && '-1'
    }, restProps),
    render: render
  };
  return _react2.default.createElement(CustomRoot, customRootProps);
};

/**
 * A MenuItem represents an option in a [Menu](../menu).
 * They can be used to trigger actions or navigate to a new location.
 * MenuItems provide context through optional variants, secondary text, or [Icons](../icon).
 *
 * A custom rendering hook is exposed to enable any extra functionality your app requires.
 */
function MenuItem(_ref4) {
  var _ref4$tabIndex = _ref4.tabIndex,
      tabIndex = _ref4$tabIndex === undefined ? 0 : _ref4$tabIndex,
      _ref4$variant = _ref4.variant,
      variant = _ref4$variant === undefined ? 'regular' : _ref4$variant,
      restProps = _objectWithoutProperties(_ref4, ['tabIndex', 'variant']);

  var rootProps = _extends({
    tabIndex: tabIndex,
    variant: variant
  }, restProps);

  if (rootProps.render) {
    return customRender(rootProps);
  } else {
    return defaultRender(rootProps);
  }
}