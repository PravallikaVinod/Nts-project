'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentTheme = undefined;

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * Copyright 2017 CA
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   */

exports.default = FormFieldset;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('../styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var componentTheme = exports.componentTheme = function componentTheme(baseTheme) {
  return _extends({
    FormFieldset_borderColor: baseTheme.borderColor,

    FormFieldsetLegend_color_text: baseTheme.color_text,
    FormFieldsetLegend_fontSize: baseTheme.fontSize_ui,
    FormFieldsetLegend_fontWeight: baseTheme.fontWeight_bold

  }, baseTheme);
};

var Root = (0, _styles.createStyledComponent)('fieldset', function (_ref) {
  var disabled = _ref.disabled,
      baseTheme = _ref.theme;

  var theme = componentTheme(baseTheme);

  return {
    border: '1px solid transparent',
    borderTopColor: theme.FormFieldset_borderColor,
    padding: 0,

    '& > legend': {
      color: disabled ? theme.color_text_disabled : theme.FormFieldsetLegend_color_text,
      fontSize: theme.FormFieldsetLegend_fontSize,
      fontWeight: theme.FormFieldsetLegend_fontWeight,
      lineHeight: theme.size_medium,
      padding: 0,
      paddingLeft: theme.direction === 'rtl' ? theme.space_inline_sm : null,
      paddingRight: theme.direction === 'ltr' ? theme.space_inline_sm : null
    }
  };
}, {
  displayName: 'FormFieldset',
  includeStyleReset: true,
  rootEl: 'fieldset'
});

/**
 * FormFieldsets group related [FormFields](../form-field) and provide a legend.
 * Grouping FormFields provides contextual clues to users and enhances
 * accessibility.
 */
function FormFieldset(_ref2) {
  var children = _ref2.children,
      legend = _ref2.legend,
      restProps = _objectWithoutProperties(_ref2, ['children', 'legend']);

  return _react2.default.createElement(
    Root,
    restProps,
    legend && _jsx('legend', {}, void 0, legend),
    children
  );
}