"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = mapComponentThemes;
/**
 * Copyright 2017 CA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
  * Generates a new component theme based on the theme of another component.
  */
function mapComponentThemes(source, override, baseTheme) {
  var REGEXP_SOURCE_NAME = new RegExp("^" + source.name);
  var sourceThemeWithRenamedKeys = Object.keys(source.theme).reduce(function (acc, sourceKey) {
    if (REGEXP_SOURCE_NAME.test(sourceKey)) {
      var overrideKey = sourceKey.replace(REGEXP_SOURCE_NAME, override.name);
      acc[overrideKey] = source.theme[sourceKey];
    }
    return acc;
  }, {});

  return _extends({}, baseTheme, sourceThemeWithRenamedKeys, override.theme);
}