'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _glamorous = require('glamorous');

var _styles = require('../styles');

var _Box = require('../Box');

var _Box2 = _interopRequireDefault(_Box);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
                                                                                                                                                                                                                              * Copyright 2017 CA
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              */

var getAlignment = function getAlignment(value) {
  return ['start', 'end'].indexOf(value) !== -1 ? 'flex-' + value : value;
};

var getGutterSize = function getGutterSize(theme, value) {
  return typeof value === 'number' ? (0, _styles.pxToEm)(value / 2) : parseFloat(theme['space_inline_' + value] || value) / 2 + 'em';
};

var getMargin = function getMargin(gutter, theme, value) {
  return value ? 'calc(' + getMeasurement(theme, value) + ' - ' + gutter + ')' : '-' + gutter;
};

var getMeasurement = function getMeasurement(theme, value) {
  return theme['space_inline_' + value] || (typeof value === 'number' ? value + 'px' : value);
};

var getJustification = function getJustification(value) {
  return ['around', 'between', 'evenly'].indexOf(value) !== -1 ? 'space-' + value : getAlignment(value);
};

var styles = {
  root: function root(_ref) {
    var breakpoints = _ref.breakpoints,
        alignItems = _ref.alignItems,
        direction = _ref.direction,
        gutterWidth = _ref.gutterWidth,
        inline = _ref.inline,
        margin = _ref.margin,
        marginEnd = _ref.marginEnd,
        marginHorizontal = _ref.marginHorizontal,
        propMarginLeft = _ref.marginLeft,
        propMarginRight = _ref.marginRight,
        marginStart = _ref.marginStart,
        justifyContent = _ref.justifyContent,
        theme = _ref.theme,
        wrap = _ref.wrap;

    var rtl = theme.direction === 'rtl';
    var gutter = getGutterSize(theme, gutterWidth);
    var marginLeft = propMarginLeft || (rtl ? marginEnd : marginStart) || marginHorizontal || margin;
    var marginRight = propMarginRight || (rtl ? marginStart : marginEnd) || marginHorizontal || margin;

    var mapValueToProperty = function mapValueToProperty(property, value) {
      var map = {
        alignItems: getAlignment,
        display: function display(value) {
          return value === undefined || value === false ? 'flex' : 'inline-flex';
        },
        flexDirection: function flexDirection(value) {
          return value;
        },
        flexWrap: function flexWrap(value) {
          return value ? 'wrap' : value === false ? 'nowrap' : value;
        },
        marginLeft: function marginLeft(value) {
          return getMargin(gutter, theme, value);
        },
        marginRight: function marginRight(value) {
          return getMargin(gutter, theme, value);
        },
        justifyContent: getJustification
      };

      return map[property](value);
    };

    return (0, _styles.getResponsiveStyles)({
      breakpoints: breakpoints,
      mapValueToProperty: mapValueToProperty,
      styles: {
        alignItems: alignItems,
        display: inline,
        flexDirection: direction,
        flexWrap: wrap,
        marginLeft: marginLeft,
        marginRight: marginRight,
        justifyContent: justifyContent
      },
      theme: theme
    });
  }
};

var Root = (0, _styles.createStyledComponent)(_Box2.default, styles.root, {
  displayName: 'Flex',
  filterProps: ['inline']
});

var ThemedRoot = (0, _glamorous.withTheme)(function (_ref2) {
  var breakpoints = _ref2.breakpoints,
      children = _ref2.children,
      gutterWidth = _ref2.gutterWidth,
      theme = _ref2.theme,
      restProps = _objectWithoutProperties(_ref2, ['breakpoints', 'children', 'gutterWidth', 'theme']);

  var rootProps = _extends({
    breakpoints: breakpoints,
    gutterWidth: gutterWidth
  }, restProps);

  var flexItems = void 0;
  flexItems = _react.Children.map(children, function (child) {
    var _child$props = child.props,
        propBreakpoints = _child$props.breakpoints,
        propMargin = _child$props.margin,
        marginHorizontal = _child$props.marginHorizontal,
        marginLeft = _child$props.marginLeft,
        marginRight = _child$props.marginRight;

    var props = {
      breakpoints: propBreakpoints || breakpoints
    };

    if (gutterWidth) {
      var margin = marginHorizontal || propMargin || getGutterSize(theme, gutterWidth);
      props = _extends({}, props, {
        marginLeft: marginLeft || margin,
        marginRight: marginRight || margin
      });
    }
    return (0, _react.cloneElement)(child, props);
  });

  return _react2.default.createElement(
    Root,
    rootProps,
    flexItems
  );
});

/**
 * Flex component is used together with [FlexItem](../flex-item) to lay out
 * other components in a flexible, and optionally responsive, manner.
 */
var Flex = function Flex(props) {
  return _react2.default.createElement(ThemedRoot, props);
};

Flex.propTypes = {
  /** Align items along the cross axis [[Responsive-capable]](#responsive) */
  alignItems: require('prop-types').oneOfType([require('prop-types').oneOf(['start']), require('prop-types').oneOf(['end']), require('prop-types').oneOf(['center']), require('prop-types').oneOf(['stretch']), require('prop-types').arrayOf(require('prop-types').oneOf(['start', 'end', 'center', 'stretch']))]),

  /**
   * Media query (min-width) breakpoints along which to apply props marked
   * "&#xfeff;[[Responsive-capable]](#responsive)&#xfeff;"
   */
  breakpoints: require('prop-types').arrayOf(require('prop-types').oneOfType([require('prop-types').number, require('prop-types').string])),

  /** Must be [FlexItem(s)](./flex-item). */
  children: typeof React$Node === 'function' ? require('prop-types').instanceOf(React$Node).isRequired : require('prop-types').any.isRequired,

  /**
   * Direction of flow of items along the main axis
   * [[Responsive-capable]](#responsive)
   */
  direction: require('prop-types').oneOfType([require('prop-types').oneOf(['column']), require('prop-types').oneOf(['column-reverse']), require('prop-types').oneOf(['row']), require('prop-types').oneOf(['row-reverse']), require('prop-types').arrayOf(require('prop-types').oneOf(['column', 'column-reverse', 'row', 'row-reverse']))]),

  /** Size of gap between children */
  gutterWidth: require('prop-types').oneOfType([require('prop-types').oneOf(['xxs']), require('prop-types').oneOf(['xs']), require('prop-types').oneOf(['sm']), require('prop-types').oneOf(['md']), require('prop-types').oneOf(['lg']), require('prop-types').oneOf(['xl']), require('prop-types').oneOf(['xxl']), require('prop-types').number, require('prop-types').string]),

  /** Align items along the main axis [[Responsive-capable]](#responsive) */
  justifyContent: require('prop-types').oneOfType([require('prop-types').oneOf(['start']), require('prop-types').oneOf(['end']), require('prop-types').oneOf(['center']), require('prop-types').oneOf(['around']), require('prop-types').oneOf(['between']), require('prop-types').oneOf(['evenly']), require('prop-types').arrayOf(require('prop-types').oneOf(['start', 'end', 'center', 'around', 'between', 'evenly']))]),

  /**
   * Determines if items can wrap along main axis
   * [[Responsive-capable]](#responsive)
   */
  wrap: require('prop-types').oneOfType([require('prop-types').bool, require('prop-types').arrayOf(require('prop-types').bool)])
};
Flex.defaultProps = {
  alignItems: 'stretch',
  direction: 'row',
  gutterWidth: 'md',
  justifyContent: 'start'
};

exports.default = Flex;